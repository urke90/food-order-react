{"ast":null,"code":"var _jsxFileName = \"/home/uros/Desktop/uros/food-order-react/src/components/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { ADD_ITEM, REMOVE_ITEM } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, _ref) => {\n  let {\n    type,\n    item\n  } = _ref;\n\n  /*\n      1, ako ima itema samo povecam amount za prethodnu + nov\n      2. ako nema itema kreiram nov item\n  */\n  switch (type) {\n    case ADD_ITEM:\n      const updatedTotalAmount = state.totalAmount + item.price * item.amount;\n      const existingItemIndex = state.items.findIndex(el => el.id === item.id);\n      console.log();\n      const existingItem = state.items[existingItemIndex];\n      let updatedItems;\n\n      if (existingItem) {\n        console.log('da');\n        const updatedItem = { ...existingItem,\n          amount: existingItem.amount + item.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingItemIndex] = updatedItem;\n      } else {\n        console.log('ne');\n        updatedItems = state.items.concat(item);\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    case REMOVE_ITEM:\n      return;\n\n    default:\n      return initState;\n  }\n};\n\nconst CartProvider = _ref2 => {\n  _s();\n\n  let {\n    children\n  } = _ref2;\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, initState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: ADD_ITEM,\n      item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: REMOVE_ITEM,\n      id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"gPL3szej89EP4KQ49093s8E5Iv4=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/uros/Desktop/uros/food-order-react/src/components/store/CartProvider.js"],"names":["useReducer","CartContext","ADD_ITEM","REMOVE_ITEM","initState","items","totalAmount","cartReducer","state","type","item","updatedTotalAmount","price","amount","existingItemIndex","findIndex","el","id","console","log","existingItem","updatedItems","updatedItem","concat","CartProvider","children","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,EADO;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAlB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,WAA2B;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;;AAC3C;AACJ;AACA;AACA;AACI,UAAQD,IAAR;AACI,SAAKP,QAAL;AACI,YAAMS,kBAAkB,GACpBH,KAAK,CAACF,WAAN,GAAoBI,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACG,MAD1C;AAGA,YAAMC,iBAAiB,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CACrBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUP,IAAI,CAACO,EADD,CAA1B;AAGAC,MAAAA,OAAO,CAACC,GAAR;AACA,YAAMC,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYS,iBAAZ,CAArB;AAEA,UAAIO,YAAJ;;AAEA,UAAID,YAAJ,EAAkB;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,cAAMG,WAAW,GAAG,EAChB,GAAGF,YADa;AAEhBP,UAAAA,MAAM,EAAEO,YAAY,CAACP,MAAb,GAAsBH,IAAI,CAACG;AAFnB,SAApB;AAKAQ,QAAAA,YAAY,GAAG,CAAC,GAAGb,KAAK,CAACH,KAAV,CAAf;AACAgB,QAAAA,YAAY,CAACP,iBAAD,CAAZ,GAAkCQ,WAAlC;AACH,OATD,MASO;AACHJ,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAE,QAAAA,YAAY,GAAGb,KAAK,CAACH,KAAN,CAAYkB,MAAZ,CAAmBb,IAAnB,CAAf;AACH;;AAED,aAAO;AACHL,QAAAA,KAAK,EAAEgB,YADJ;AAEHf,QAAAA,WAAW,EAAEK;AAFV,OAAP;;AAIJ,SAAKR,WAAL;AACI;;AACJ;AACI,aAAOC,SAAP;AAlCR;AAoCH,CAzCD;;AA2CA,MAAMoB,YAAY,GAAG,SAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnC,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkC3B,UAAU,CAACO,WAAD,EAAcH,SAAd,CAAlD;;AAEA,QAAMwB,cAAc,GAAIlB,IAAD,IAAU;AAC7BiB,IAAAA,kBAAkB,CAAC;AAAElB,MAAAA,IAAI,EAAEP,QAAR;AAAkBQ,MAAAA;AAAlB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMmB,iBAAiB,GAAIZ,EAAD,IAAQ;AAC9BU,IAAAA,kBAAkB,CAAC;AAAElB,MAAAA,IAAI,EAAEN,WAAR;AAAqBc,MAAAA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMa,WAAW,GAAG;AAChBzB,IAAAA,KAAK,EAAEqB,SAAS,CAACrB,KADD;AAEhBC,IAAAA,WAAW,EAAEoB,SAAS,CAACpB,WAFP;AAGhByB,IAAAA,OAAO,EAAEH,cAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMD,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { ADD_ITEM, REMOVE_ITEM } from './constants';\n\nconst initState = {\n    items: [],\n    totalAmount: 0\n};\n\nconst cartReducer = (state, { type, item }) => {\n    /*\n        1, ako ima itema samo povecam amount za prethodnu + nov\n        2. ako nema itema kreiram nov item\n    */\n    switch (type) {\n        case ADD_ITEM:\n            const updatedTotalAmount =\n                state.totalAmount + item.price * item.amount;\n\n            const existingItemIndex = state.items.findIndex(\n                (el) => el.id === item.id\n            );\n            console.log();\n            const existingItem = state.items[existingItemIndex];\n\n            let updatedItems;\n\n            if (existingItem) {\n                console.log('da');\n                const updatedItem = {\n                    ...existingItem,\n                    amount: existingItem.amount + item.amount\n                };\n\n                updatedItems = [...state.items];\n                updatedItems[existingItemIndex] = updatedItem;\n            } else {\n                console.log('ne');\n                updatedItems = state.items.concat(item);\n            }\n\n            return {\n                items: updatedItems,\n                totalAmount: updatedTotalAmount\n            };\n        case REMOVE_ITEM:\n            return;\n        default:\n            return initState;\n    }\n};\n\nconst CartProvider = ({ children }) => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, initState);\n\n    const addItemHandler = (item) => {\n        dispatchCartAction({ type: ADD_ITEM, item });\n    };\n\n    const removeItemHandler = (id) => {\n        dispatchCartAction({ type: REMOVE_ITEM, id });\n    };\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemHandler,\n        removeItem: removeItemHandler\n    };\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}